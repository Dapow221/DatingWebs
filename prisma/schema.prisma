// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
    // directUrl = env("POSTGRES_URL_NON_POOLING") only for production
}

model Post {
    id              Int      @id @default(autoincrement())
    title           String
    description     String
    images          Image[]
    
    createdBy       User   @relation(fields: [createdById], references: [id], name: "createdBy")
    couples         User   @relation(fields: [couplesId], references: [id], name: "couples")

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    datePosted      String

    couplesId       String
    createdById     String
}

model Image {
    id        Int     @id @default(autoincrement())
    url       String
    postId    Int
    post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                    String    @id @default(cuid())
    name                  String?
    email                 String?   @unique
    emailVerified         DateTime?
    image                 String?
    accounts              Account[]
    sessions              Session[]
    createdByPosts        Post[]    @relation(name: "createdBy")
    couplesPosts          Post[]    @relation(name: "couples")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
